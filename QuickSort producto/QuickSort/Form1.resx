<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAHeSURBVDhPbZM/aFNRFMafiLg4hC7GQdClpUPRDEqnKnQS
        h0IRLCUI4qTZMmSJk5BSzKCQQlEh0WCohZCmSkAhQ4YkRhGjaLAlMSAaQRDFoYRC4ZjfSc6Lr/HAt9x3
        vj/3nvMcqvk4JSnfIdk8f1py05MeZAMnRkAvHJdM4+dCQsrhi1KNXvKgdisob2KLite3r8jbO9ekkYnI
        2oS/L4Ia5Kczfnk+PyUvFgJSDJ5VNBIRRSk0q8DATD4kw5rEyZ87JS9vXlYypHLognQ/VmR//akXNY0l
        q69c1xQO8TnAGbIVIq30snzNr4r87gwOu/Jq6aoKIZA56RsK4G7OkBDD9Vf1mVQic9IpJPUbZ4i4Ahtn
        xvUKgEIEsqbBuQeLbUlGBIjEY1Fb96LuY5mAGZCGaqZj8v5BWDLHj4jDXP8nQGwT4DswgVb2rk7BFbA5
        U9wRshu5ByID2fmpPbhjlD52eCjg3rlXRCTybvud+2g/Suv6jTPIHgE2jNj1+A1tomj8Uriv2PvWGJz2
        xQ2Pjh4cClhs3CCP1Pe2S9x+EpdPmVg/AevIbtuoeCwbE/tAArszJMidWk6vqKvMD8FK8qqQ/gVEI5sA
        E8Do4dgB7x+JGkIshwe9UQHiGujtkx3nL8tgxapqytQdAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAhGtKAKt7QgCWfWEA2oYAAN2MAADekgEA55cCAOmaCADpnA4A7pwMAOibHQDsoBkA2Y4sAPKn
        IwD4pyMAv4xCAMCORwDKmE8A0JJBAMWSWgDZnVgA5qVNAOKlUQDnqFIA5KpXAP68UwD1s10A/r5aAPy4
        XQDytWMA7bR4AP7AYAD+xWIA/sh9AACR/gAGn/4AHZP+AAKi/gAJp/4AAKn+AAmu/gALtv4ADbb+ABu4
        /gBHtv4ARbn+AEy7/gATwv4ATM/+AFfG/gBeyv4AYcb+AIiEggCgnp4Av7CfAKysrADrvoIAw7OjAMW1
        rQDswIkA7cONAP3PjQD+1oYA7caSAO/OlADtyZoA8M6eAP7RkwD+05oA/tumAP7eqwD+4bIA/uu8AIK4
        +AC9ydsAk8T3AI3V9wCN0f4An9z+AK7T+wC12/YAttb7AL/e/QC74vgAzMzMAM/R1QDZ2dkA2NveAN7c
        3ADj3d0A8ODIAM7V6ADM2OwA0tfhANzc5gDO4PcA1en7AOTh5gDo6OgA8fDvAODi8QDg6/cA5O32AODu
        /ADs9f4A8PH1APXy9gD39vUA9/v+AOT/0QD///8AAAAAACYvAABAUAAAWnAAAHSQAACOsAAAqc8AAMLw
        AADR/xEA2P8xAN7/UQDj/3EA6f+RAO//sQD2/9EA////AAAAAAAvJgAAUEEAAHBbAACQdAAAsI4AAM+p
        AADwwwAA/9IRAP/YMQD/3VEA/+RxAP/qkQD/8LEA//bRAP///wAAAAAALxQAAFAiAABwMAAAkD4AALBN
        AADPWwAA8GkAAP95EQD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8DAABQBAAAcAYAAJAJ
        AACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAAAAAvAA4AUAAXAHAA
        IQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP///wAAAAAALwAgAFAA
        NgBwAEwAkABiALAAeADPAI4A8ACkAP8RswD/Mb4A/1HHAP9x0QD/kdwA/7HlAP/R8AD///8AAAAAACwA
        LwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx/wD70f8A////AAAA
        AAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R/wDcsf8A69H/AP//
        /wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx/wCmkf8Av7H/ANrR
        /wD///8AAGNZV1dXV1dXV1dXV1ljAFUDAQEBAQEBAQEBAQEBNVcVIiIiIiI+REVFRkdISQI4FlZWS1lZ
        WlpaWmJiYmUSNhZfLiVSYS8vLy8vL05rETYWXDAoTFEpKisrKysvahE2F2JUTWpsZ2ZmZmZmbWoQNhdj
        UEpnbGBgYGBgYGlqEDYYXSsjTFEkJycnJyYtahA2GWUxLFNoNDMzMzMyT2sQNhleX15iYmJiYmJiYmJY
        EDYeW0NDQkJAPT09PDw5QRM2Gw4HCAgICAkJCQwMDA8NNh0LBAUFBQUFBgYGBgYKDTgfPyAgICAcHBwa
        GhoaIRRZZDs3Nzc3Nzc3Nzc3NzpaAIABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA=
</value>
  </data>
</root>